---
# tasks file for postgres
# Install PostgreSQL packages
- name: Install PostgreSQL packages
  yum:
    name:
      - postgresql-server
      - postgresql-contrib
      - postgresql-devel
      - python3-psycopg2
    state: present

# Initialize database if needed
- name: Initialize PostgreSQL database
  command: /usr/bin/postgresql-setup initdb
  args:
    creates: /var/lib/pgsql/data/PG_VERSION

# Ensure PostgreSQL is running
- name: Ensure PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes

# Ensure DB user exists
- name: Ensure devops user exists
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    state: present

# Ensure database exists
- name: Ensure sharedappdb database exists
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ db_user }}"
    state: present

# Ensure devs table exists
- name: Ensure devs table exists
  become_user: postgres
  postgresql_query:
    db: "{{ db_name }}"
    query: |
      CREATE TABLE IF NOT EXISTS devs (
        id SERIAL PRIMARY KEY,
        name VARCHAR(50)
      );

# Ensure UNIQUE constraint on name column
- name: Ensure name column has UNIQUE constraint
  become_user: postgres
  postgresql_query:
    db: "{{ db_name }}"
    query: |
      DO $$
      BEGIN
        IF NOT EXISTS (
          SELECT 1
          FROM pg_constraint
          WHERE conname = 'devs_name_unique'
        ) THEN
          ALTER TABLE devs ADD CONSTRAINT devs_name_unique UNIQUE (name);
        END IF;
      END$$;

# Seed sample data idempotently
- name: Seed devs table with sample data
  become_user: postgres
  postgresql_query:
    db: "{{ db_name }}"
    query: |
      INSERT INTO devs (name)
      VALUES 
        ('Flask Developer'),
        ('Node Developer'),
        ('Shared DB User')
      ON CONFLICT (name) DO NOTHING;
