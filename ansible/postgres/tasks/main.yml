---
# tasks file for postgres

- name: Install PostgreSQL packages
  yum:
    name:
      - postgresql-server
      - postgresql-contrib
      - postgresql-devel
      - python3-psycopg2
    state: present

- name: Initialize PostgreSQL database
  command: /usr/bin/postgresql-setup initdb
  args:
    creates: /var/lib/pgsql/data/PG_VERSION

- name: Ensure PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Ensure devops user exists
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    state: present

- name: Ensure sharedappdb database exists
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ db_user }}"
    state: present

- name: Allow password authentication for IPv4
  lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: '^(host\s+all\s+all\s+127\.0\.0\.1/32\s+)\w+'
    line: 'host    all             all             127.0.0.1/32            md5'
    state: present
  notify: Restart PostgreSQL

- name: Allow password authentication for IPv6
  lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: '^(host\s+all\s+all\s+::1/128\s+)\w+'
    line: 'host    all             all             ::1/128                 md5'
    state: present
  notify: Restart PostgreSQL

- name: Ensure devs table exists
  become_user: postgres
  postgresql_query:
    db: "{{ db_name }}"
    query: |
      CREATE TABLE IF NOT EXISTS devs (
        id SERIAL PRIMARY KEY,
        name VARCHAR(50) UNIQUE
      );

- name: Seed devs table with sample data
  become_user: postgres
  postgresql_query:
    db: "{{ db_name }}"
    query: |
      INSERT INTO devs (name)
      VALUES 
        ('Flask Developer'),
        ('Node Developer'),
        ('Shared DB User')
      ON CONFLICT (name) DO NOTHING;

- name: Grant privileges to devops user on schema
  become_user: postgres
  postgresql_privs:
    db: "{{ db_name }}"
    roles: "{{ db_user }}"
    objs: public
    type: schema
    privs: USAGE

- name: Grant privileges on all tables to devops user
  become_user: postgres
  postgresql_privs:
    db: "{{ db_name }}"
    roles: "{{ db_user }}"
    objs: ALL_IN_SCHEMA
    type: table
    privs: SELECT,INSERT,UPDATE,DELETE

- name: Ensure default privileges for new tables
  become_user: postgres
  postgresql_query:
    db: "{{ db_name }}"
    query: |
      ALTER DEFAULT PRIVILEGES IN SCHEMA public
      GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO {{ db_user }};
